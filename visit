#! /usr/bin/env python

from __future__ import print_function
import os 
import sys
import webbrowser  
import ConfigParser
from subprocess import call
# webbrowser.open('http://www.baidu.com')

parser = ConfigParser.ConfigParser()
cfgDir = os.path.split(os.path.realpath(__file__))[0]
cfgFile = "%s/doc/urls"%(cfgDir)
#print cfgFile
parser.read(cfgFile)

#by default: urls
section = 'URLS' 

# todo: other sections logic
if len(sys.argv) == 2 and sys.argv[1] == 'ls':
    options = parser.options(section)
    # options.sort()
    col = 4
    padding_pace = 18
    legend = padding_pace * col + 1
    total = 0
    print('*' * legend)
    print('*' + 'Ray\'s Wormhole'.center( legend -2 ) + '*') 
    print('*' * legend)
    for x in sorted(options):
        # elif index % col != 1:
            # print('\t')
        # print(x, end='\t'*3)
        index = total + 1
        x = ('* (%s)'% index if index % col == 1 else '(%s)' % index) + x
        print(x.ljust(padding_pace), end='')
        total += 1
        if total % col == 0 :
            print('*')
    if total % col <> 0:
        offset = col - (total % col)
        spaces = offset * padding_pace
        print('*'.rjust(spaces + 1))
    print('*' * legend)

elif section == 'URLS' and len(sys.argv) == 2:
    try:
        webbrowser.open_new(parser.get(section, sys.argv[1]))
    except Exception, e:
    	options = parser.options(section)
    	# options.sort()
    	col = 4
    	padding_pace = 18
    	legend = padding_pace * col + 1
    	total = 0
	print('*' * legend)
    	print('*' + 'Ray\'s Wormhole'.center( legend -2 ) + '*')
    	print('*' * legend)
    	for x in sorted(options):
        	# elif index % col != 1:
            	# print('\t')
        	# print(x, end='\t'*3)
            index = total + 1
            x = ('* (%s)'% index if index % col == 1 else '(%s)' % index) + x
            print(x.ljust(padding_pace), end='')
            total += 1
            if total % col == 0 :
                print('*')
        if total % col <> 0:
            offset = col - (total % col)
            spaces = offset * padding_pace
            print('*'.rjust(spaces + 1))
        print('*' * legend) 
        # call(['visit', 'ls'])
        # print(unichr(0x1f646) )
        # print('[' +unichr(0x1f648) + ' '+ unichr(0x1f649) + ' ' + unichr(0x1f64A) + ' ' + '] ' + "No such url, please find an entry from the list")

# print section
