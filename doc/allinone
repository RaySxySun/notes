# Setup a kafka playground
> http://wurstmeister.github.io/kafka-docker/
> https://github.com/wurstmeister/kafka-docker

# run tomcat docker
$ docker run -it --rm -p 8888:8080 hub.ecf-poc.com:9999/micro-service/fms-bff

# busybox test
$ docker run -it  hub.ecf-poc.com:9999/library/busybox:latest ping trip-traffic-es-1

alias busybox="docker run -it --rm  busybox"

# connectivity test
$ nc -vz -w 10 192.168.2.72 9200

# docker-compose up doesn't pull down latest image if the image exists locally
$ docker-compose pull && docker-compose up

# build docker images with specified network
$ docker run -it --network docker01 hub.ecf-poc.com:9999/library/fms-base:latest bash

# merge files and filter out duplicate info (in Dockerfile)
COPY ./hosts /tmp/hosts
COPY ./fms-bff-latest/conf /opt/ecf/web_component/fms-bff-latest/conf
RUN cat /tmp/hosts /etc/hosts | sort -u > /etc/hosts

# input & redirect
$ cat <<EOF > /etc/sysctl.d/k8s.conf
net.ipv4.ip_forward = 1
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
EOF

# k8s

kubectl create -f target/services/kube-dns.yaml
kubectl -n kube-system get svc

# clean all invalid images
docker rmi -f $(docker images | grep non | awk '{print $3}')
