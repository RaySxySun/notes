kubectl create -f nginx-pod.yaml
kubectl delete -f nginx-pod.yaml
kubectl get pods
kubectl get deploy
kubectl proxy
curl http://127.0.0.1:8001/api/v1/proxy/namespaces/default/pods/nginx/

```
# nginx pod config
  apiVersion: v1
  kind: Pod
  metadata:
    name: nginx
  spec:
    containers:
      - name: nginx
        image: nginx:1.7.9
        ports:
        - containerPort: 80                               
```

kubectl expose deploy kubernetes-bootcamp --type="NodePort" --target-port=8080 --port=80
kubectl get services

```
	NAME                  TYPE        CLUSTER-IP    EXTERNAL-IP   PORT(S)        AGE
	kubernetes            ClusterIP   10.68.0.1     <none>        443/TCP        23h
	kubernetes-bootcamp   NodePort    10.68.41.40   <none>        80:34116/TCP   1m
```
root@server02:~/kubernetes-starter# curl 192.168.56.11:34116
Hello Kubernetes bootcamp! | Running on: kubernetes-bootcamp-7689dc585d-nwtqb | v=2
root@server02:~/kubernetes-starter# curl 192.168.56.13:34116
Hello Kubernetes bootcamp! | Running on: kubernetes-bootcamp-7689dc585d-nwtqb | v=2


# service

```
# vim nginx-service.yaml
  apiVersion: apps/v1beta1
  kind: Deployment
  metadata:
    name: nginx-deployment
  spec:
    replicas: 2
    template:
      metadata:
        labels:
          app: nginx
      spec:
        containers:
        - name: nginx
          image: nginx:1.7.9
          ports:
            - containerPort: 80
```
kubectl create -f nginx-service.yaml


# kube-dns
root@server02:~/kubernetes-starter# kubectl create -f target/services/kube-dns.yaml 
> configmap "kube-dns" created
> serviceaccount "kube-dns" created
> service "kube-dns" created
> deployment "kube-dns" created

kubectl -n kube-system get svc
kubectl -n kube-system get deploy
kubectl -n kube-system get pods

